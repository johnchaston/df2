signif <- comps$p < .05
clds <- multcomp:::insert_absorb(signif,
decreasing=FALSE,
comps=mycomps,
lvl_order=lvl_order)
print(clds)
#pput  lbga  apoc  lfrc  atrc  lbrc  apan   5sp  atrn  lfrk  aace    Ax  lplc  lplw  ecok  bsub
#  "a"  "bc"   "b"  "bc"   "c"  "cd"  "de"  "de"  "ef"  "fg" "efh"  "eg" "ghi"  "gj"  "ij"   "j"
#  "a"  "bc"   "b"  "bc"   "c"  "cd"  "de"  "de"  "ef"  "fg" "efh"  "eg" "ghi"  "gj"  "ij"   "j"
name_val <- paste0(unlist(unname(m5$mcletters$Letters)))#," ",levels(test_ls$treatment))
clds$Letters
name_val <- c(clds$Letters[names(clds$Letters) == c("aace")],
clds$Letters[names(clds$Letters) == c("apan")],
clds$Letters[names(clds$Letters) == c("apoc")],
clds$Letters[names(clds$Letters) == c("atrc")],
clds$Letters[names(clds$Letters) == c("atrn")],
clds$Letters[names(clds$Letters) == c("lbrc")],
clds$Letters[names(clds$Letters) == c("lbga")],
clds$Letters[names(clds$Letters) == c("lplc")],
clds$Letters[names(clds$Letters) == c("lplw")],
clds$Letters[names(clds$Letters) == c("lfrc")],
clds$Letters[names(clds$Letters) == c("lfrk")],
clds$Letters[names(clds$Letters) == c("ecok")],
clds$Letters[names(clds$Letters) == c("pput")],
clds$Letters[names(clds$Letters) == c("bsub")],
clds$Letters[names(clds$Letters) == c("5sp")],
clds$Letters[names(clds$Letters) == c("Ax")]
)
name_val
## coloring
plot_colors <- c("red","blue","blue","blue","red","black","magenta")
plot_lines <- c("solid","solid","dashed","dotted","dashed","solid","solid")
plot_colors <- c("red","red","red","red","red","blue","blue","blue","blue","blue","blue","green","green","purple","magenta","black")
plot_lines <- c("solid","longdash","dotted","dotdash","dashed","solid","longdash","dotted","dotdash","dashed","twodash","solid","longdash","solid","solid","solid")
annot_val <- test_ls %>% group_by(treatment, event) %>% summarize(total = dplyr::n()) %>% reshape2::dcast(formula = treatment ~ event, value.var = "total") %>% mutate(percent = 1-(`1`/(`0`+`1`))) %>% dplyr::select(percent) %>% unlist() %>% unname()
annot_name <- test_ls %>% group_by(treatment, event) %>% summarize(total = dplyr::n()) %>% reshape2::dcast(formula = treatment ~ event, value.var = "total") %>% mutate(percent = 1-(`1`/(`0`+`1`))) %>% dplyr::select(treatment) %>% unlist() %>% unname()
## revalue so the CLDs match up with the ends of the bars
annot_name[14]; annot_val[14] <- .82 # bsub
annot_name[2]; annot_val[2] <- .51 # apan
annot_name[15]; annot_val[15] <- .47 # 5sp
annot_name[7]; annot_val[7] <- .37 #  lbga
annot_name[8]; annot_val[8] <- .706 # lplc
annot_name[6]; annot_val[6] <- .435 # lbrc
annot_name[10]; annot_val[10] <- .405 # lfrc
annot_name[3]; annot_val[3] <- .28 # atrc
annot_name[13]; annot_val[13] <- .06
annot_name[13]; annot_val[13] <- .06
annot_name[11]; annot_val[11] <- .66 ## lfrk
annot_name[16]; annot_val[16] <- .62
plot(survfit(S ~ treatment, test_ls),     xlim = c(10,41),     col=plot_colors,     lty=plot_lines,     lwd=1.75,    xlab= "time(d)",     ylab="fractional survival",     cex.lab=1,     cex.axis=1.1,      bty = "n")
for(i in 1:length(table(list(test_ls$treatment)))) {
legend(x = 36, y = annot_val[i], legend = name_val[i], text.col = plot_colors[i], bty = "n", xjust = 0, yjust = .5, cex=1)#
}
plot(survfit(S ~ treatment, test_ls),     xlim = c(10,41),     col=plot_colors,     lty=plot_lines,     lwd=1.75,    xlab= "time(d)",     ylab="fractional survival",     cex.lab=1,     cex.axis=1.1,      bty = "n")
for(i in 1:length(table(list(test_ls$treatment)))) {
legend(x = 36, y = annot_val[i], legend = name_val[i], text.col = plot_colors[i], bty = "n", xjust = 0, yjust = .5, cex=1)#
}
## pairwise log rank test results
print("BH-corrected pairwise Log rank test results")
model_all <- pairwise_survdiff(S ~ treatment, data = test_ls, p.adjust.method = "BH")
x <- test_ls$treatment
levs <- levels(x)
y <- Surv(test_ls$time, test_ls$event)
lvl_order <- levels(x)[order(tapply(as.numeric(y)[1:length(x)],
x, mean))]
comps <- as_tibble(model_all$p.value, rownames="row") %>%
pivot_longer(-row, names_to="col", values_to="p") %>%
na.omit()
comps %>% inner_join(lookup_code, by = c("row" = "code1")) %>% inner_join(lookup_code, by = c("col" = "code1")) %>% select(Comp1 = fullname.x, Comp2 = fullname.y, p)
## clds
print("Compact letter displays")
mycomps <- as.matrix(comps[,1:2])
signif <- comps$p < .05
clds <- multcomp:::insert_absorb(signif,
decreasing=FALSE,
comps=mycomps,
lvl_order=lvl_order)
print(clds)
name_val <- c(clds$Letters[names(clds$Letters) == c("aace")],
clds$Letters[names(clds$Letters) == c("apan")],
clds$Letters[names(clds$Letters) == c("apoc")],
clds$Letters[names(clds$Letters) == c("atrc")],
clds$Letters[names(clds$Letters) == c("atrn")],
clds$Letters[names(clds$Letters) == c("lbrc")],
clds$Letters[names(clds$Letters) == c("lbga")],
clds$Letters[names(clds$Letters) == c("lplc")],
clds$Letters[names(clds$Letters) == c("lplw")],
clds$Letters[names(clds$Letters) == c("lfrc")],
clds$Letters[names(clds$Letters) == c("lfrk")],
clds$Letters[names(clds$Letters) == c("ecok")],
clds$Letters[names(clds$Letters) == c("pput")],
clds$Letters[names(clds$Letters) == c("bsub")],
clds$Letters[names(clds$Letters) == c("5sp")],
clds$Letters[names(clds$Letters) == c("Ax")]
)
## coloring
plot_colors <- c("red","blue","blue","blue","red","black","magenta")
plot_lines <- c("solid","solid","dashed","dotted","dashed","solid","solid")
plot_colors <- c("red","red","red","red","red","blue","blue","blue","blue","blue","blue","green","green","purple","magenta","black")
plot_lines <- c("solid","longdash","dotted","dotdash","dashed","solid","longdash","dotted","dotdash","dashed","twodash","solid","longdash","solid","solid","solid")
annot_val <- test_ls %>% group_by(treatment, event) %>% summarize(total = dplyr::n()) %>% reshape2::dcast(formula = treatment ~ event, value.var = "total") %>% mutate(percent = 1-(`1`/(`0`+`1`))) %>% dplyr::select(percent) %>% unlist() %>% unname()
annot_name <- test_ls %>% group_by(treatment, event) %>% summarize(total = dplyr::n()) %>% reshape2::dcast(formula = treatment ~ event, value.var = "total") %>% mutate(percent = 1-(`1`/(`0`+`1`))) %>% dplyr::select(treatment) %>% unlist() %>% unname()
## revalue so the CLDs match up with the ends of the bars
annot_name[14]; annot_val[14] <- .82 # bsub
annot_name[2]; annot_val[2] <- .51 # apan
total_fitness2 <- fitness %>%
filter(!trt%in%c("17","GNDH-18","GNDH-19","PVEC-17","PVEC-18","PVEC-19","SDR-17","GDH-17") & !date3 %in% c(35,36)) %>%
group_by(trt,vial) %>%
summarize(mean_fec = sum(fecundity)) %>%
ungroup() %>%
group_by(vial) %>%
summarize(mean_fec2 = mean(mean_fec), sem_fec2 = sd(mean_fec)/sqrt(sum(mean_fec>-30))) %>%
ungroup() %>%
filter(vial %in% p$vec$vec_atmut) %>%
mutate(vial = as.factor(as.character(vial))) %>%
arrange(factor(vial, levels=p$vec$vec_atmut))
total_fitness2$vial <- factor(total_fitness2$vial, levels = p$vec$vec_atmut)
total_fitness2$vial
print("N per treatment")
data.frame(table(total_fitness1$vial)) %>%
full_join(lookup_code, by = c("Var1" = "code1")) %>%
dplyr::select(fullname,Freq)
data.frame(table(total_fitness1$vial)) %>%
full_join(lookup_code, by = c("Var1" = "code1"))
total_fitness2 <- fitness %>%
filter(!trt%in%c("17","GNDH-18","GNDH-19","PVEC-17","PVEC-18","PVEC-19","SDR-17","GDH-17") & !date3 %in% c(35,36)) %>%
group_by(trt,vial) %>%
summarize(mean_fec = sum(fecundity)) %>%
ungroup() %>%
group_by(vial) %>%
summarize(mean_fec2 = mean(mean_fec), sem_fec2 = sd(mean_fec)/sqrt(sum(mean_fec>-30))) %>%
ungroup() %>%
filter(vial %in% p$vec$vec_atmut) %>%
mutate(vial = as.factor(as.character(vial))) %>%
arrange(factor(vial, levels=p$vec$vec_atmut))
total_fitness2$vial <- factor(total_fitness2$vial, levels = p$vec$vec_atmut)
print("N per treatment")
data.frame(table(total_fitness1$vial)) %>%
full_join(lookup_code, by = c("Var1" = "code1")) %>%
dplyr::select(fullname,Freq)
total_fitness2
total_fitness2$vial
total_fitness2$vial <- factor(total_fitness2$vial, levels = p$vec$vec_atmut)
total_fitness2$vial
data.frame(table(total_fitness2$vial)) %>%
full_join(lookup_code, by = c("Var1" = "code1")) %>%
dplyr::select(fullname,Freq)
data.frame(table(total_fitness2$vial))
total_fitness2
test_ls <- lifespan_analysis %>%
filter(treatment %in% c(p$vec$vec_atmut)) %>%
mutate(exp = as.factor(as.character(start_day))) %>%
mutate(treatment = as.factor(as.character(treatment))) %>%
droplevels()
levels(test_ls$treatment)
print("N per treatment")
data.frame(table(total_fitness2$vial)) %>%
full_join(lookup_code, by = c("Var1" = "code1")) %>%
dplyr::select(fullname,Freq)
data.frame(table(test_ls$vial)) %>%
full_join(lookup_code, by = c("Var1" = "code1")) %>%
dplyr::select(fullname,Freq)
data.frame(table(test_ls$treatment)) %>%
full_join(lookup_code, by = c("Var1" = "code1")) %>%
dplyr::select(fullname,Freq)
data.frame(table(test_ls$treatment)) %>%
inner_join(lookup_code, by = c("Var1" = "code1")) %>%
dplyr::select(fullname,Freq)
test_ls$treatment <- plyr::revalue(test_ls$treatment, c("PVEC"="empty vector","SDR" = "oxidoreductase","GDH" = "Glucose DeH","GNDH" = "Gluconate DeH"))
test_ls$S<-Surv(test_ls$time,test_ls$event)
test_ls <- lifespan_analysis %>%
filter(treatment %in% c(p$vec$vec_atmut)) %>%
mutate(exp = as.factor(as.character(start_day))) %>%
mutate(treatment = as.factor(as.character(treatment))) %>%
droplevels()
levels(test_ls$treatment)
print("N per treatment")
data.frame(table(test_ls$treatment)) %>%
inner_join(lookup_code, by = c("Var1" = "code1")) %>%
dplyr::select(fullname,Freq)
test_ls$treatment <- plyr::revalue(test_ls$treatment, c("PVEC"="empty vector","SDR" = "oxidoreductase","GDH" = "Glucose DeH","GNDH" = "Gluconate DeH"))
test_ls$S<-Surv(test_ls$time,test_ls$event)
survdiff(S ~ treatment, data = test_ls)
model_all <- pairwise_survdiff(S ~ treatment, data = test_ls)
x <- test_ls$treatment
levs <- levels(x)
y <- Surv(test_ls$time, test_ls$event)
lvl_order <- levels(x)[order(tapply(as.numeric(y)[1:length(x)],
x, mean))]
comps <- as_tibble(model_all$p.value, rownames="row") %>%
pivot_longer(-row, names_to="col", values_to="p") %>%
na.omit()
mycomps <- as.matrix(comps[,1:2])
signif <- comps$p < .05
comps %>% inner_join(lookup_code, by = c("row" = "code1")) %>% inner_join(lookup_code, by = c("col" = "code1")) %>% select(Comp1 = fullname.x, Comp2 = fullname.y, p)
comps
lookup_code <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/lookup_code.csv")
total_fitness1 <- fitness %>%
filter(!trt%in%c("GNDH-17","GNDH-18","GNDH-19","PVEC-17","PVEC-18","PVEC-19","SDR-17","GDH-17") & !date3 %in% c(35,36)) %>%
group_by(trt,vial) %>%
summarize(mean_fec = sum(fecundity)) %>%
filter(vial %in% p$vec$vec_atmut)
total_fitness1$vial <- factor(total_fitness1$vial, levels = p$vec$vec_atmut)
levels(total_fitness1$vial)
print("N per treatment")
data.frame(table(total_fitness1$vial)) %>%
inner_join(lookup_code, by = c("Var1" = "code1")) %>%
dplyr::select(fullname,Freq)
total_fitness1$vial <- plyr::revalue(total_fitness1$vial, c("PVEC"="empty vector","SDR" = "oxidoreductase","GDH" = "Glucose DeH","GNDH" = "Gluconate DeH"))
print("KW test")
kruskal.test(mean_fec ~ vial, total_fitness1)
total_fitness2 <- fitness %>%
filter(!trt%in%c("17","GNDH-18","GNDH-19","PVEC-17","PVEC-18","PVEC-19","SDR-17","GDH-17") & !date3 %in% c(35,36)) %>%
group_by(trt,vial) %>%
summarize(mean_fec = sum(fecundity)) %>%
ungroup() %>%
group_by(vial) %>%
summarize(mean_fec2 = mean(mean_fec), sem_fec2 = sd(mean_fec)/sqrt(sum(mean_fec>-30))) %>%
ungroup() %>%
filter(vial %in% p$vec$vec_atmut) %>%
mutate(vial = as.factor(as.character(vial))) %>%
arrange(factor(vial, levels=p$vec$vec_atmut))
total_fitness2$vial <- factor(total_fitness2$vial, levels = p$vec$vec_atmut)
total_fitness2$vial <- plyr::revalue(total_fitness2$vial, c("PVEC"="empty vector","SDR" = "oxidoreductase","GDH" = "Glucose DeH","GNDH" = "Gluconate DeH"))
plot_colors <- c("red","red","red","red")
plot_lines <- c("solid","dashed","dotted","dotdash")
test_ls <- lifespan_analysis %>%
filter(treatment %in% c(p$vec$vec_atmut)) %>%
mutate(exp = as.factor(as.character(start_day))) %>%
mutate(treatment = as.factor(as.character(treatment))) %>%
droplevels()
levels(test_ls$treatment)
print("N per treatment")
data.frame(table(test_ls$treatment)) %>%
inner_join(lookup_code, by = c("Var1" = "code1")) %>%
dplyr::select(fullname,Freq)
test_ls$treatment <- plyr::revalue(test_ls$treatment, c("PVEC"="empty vector","SDR" = "oxidoreductase","GDH" = "Glucose DeH","GNDH" = "Gluconate DeH"))
test_ls$S<-Surv(test_ls$time,test_ls$event)
## log rank test
print("Log rank test results")
survdiff(S ~ treatment, data = test_ls)
## pairwise log rank test results
print("BH-corrected pairwise Log rank test results")
model_all <- pairwise_survdiff(S ~ treatment, data = test_ls)
x <- test_ls$treatment
levs <- levels(x)
y <- Surv(test_ls$time, test_ls$event)
lvl_order <- levels(x)[order(tapply(as.numeric(y)[1:length(x)],
x, mean))]
comps <- as_tibble(model_all$p.value, rownames="row") %>%
pivot_longer(-row, names_to="col", values_to="p") %>%
na.omit()
mycomps <- as.matrix(comps[,1:2])
signif <- comps$p < .05
comps %>% inner_join(lookup_code, by = c("row" = "code1")) %>% inner_join(lookup_code, by = c("col" = "code1")) %>% select(Comp1 = fullname.x, Comp2 = fullname.y, p)
comps %>% inner_join(lookup_code, by = c("row" = "code2")) %>% inner_join(lookup_code, by = c("col" = "code1")) %>% select(Comp1 = fullname.x, Comp2 = fullname.y, p)
lookup_code
View(lookup_code)
comps %>% inner_join(lookup_code, by = c("row" = "code2"))
comps %>% inner_join(lookup_code, by = c("row" = "code2")) %>% inner_join(lookup_code, by = c("col" = "code2")) %>% select(Comp1 = fullname.x, Comp2 = fullname.y, p)
multcomp:::insert_absorb(signif,
decreasing=FALSE,
comps=mycomps,
lvl_order=lvl_order)
name_val <- paste0(unlist(unname(m5$mcletters$Letters)))#," ",levels(test_ls$treatment))
plot_colors <- c("red","red","red","red")
plot_lines <- c("dotted","dotdash","solid","dashed")
annot_val <- test_ls %>% group_by(treatment, event) %>% summarize(total = dplyr::n()) %>% dcast(formula = treatment ~ event, value.var = "total") %>% mutate(percent = 1-(`1`/(`0`+`1`))) %>% dplyr::select(percent) %>% unlist() %>% unname()
par(mai=c(1,1,.1,.1))
plot(survfit(S ~ treatment, test_ls),     xlim = c(10,41),     col=plot_colors,     lty=plot_lines,     lwd=5,    xlab= "time(d)",     ylab="fractional survival",     cex.lab=2.5,     cex.axis=2,      bty = "n")
for(i in 1:length(table(list(test_ls$treatment)))) {
legend(x = 36, y = annot_val[i], legend = name_val[i], text.col = plot_colors[i], bty = "n", xjust = 0, yjust = .5, cex=2.5)#
}
par(mai=c(1,1,.1,.1))
plot(survfit(S ~ treatment, test_ls),     xlim = c(10,41),     col=plot_colors,     lty=plot_lines,     lwd=5,    xlab= "time(d)",     ylab="fractional survival",     cex.lab=2.5,     cex.axis=2,      bty = "n")
for(i in 1:length(table(list(test_ls$treatment)))) {
legend(x = 36, y = annot_val[i], legend = name_val[i], text.col = plot_colors[i], bty = "n", xjust = 0, yjust = .5, cex=2.5)#
}
annot_val
annot_val[i]
name_val
multcomp:::insert_absorb(signif,
decreasing=FALSE,
comps=mycomps,
lvl_order=lvl_order)
clds <- multcomp:::insert_absorb(signif,
decreasing=FALSE,
comps=mycomps,
lvl_order=lvl_order)
print(clds)
annot_val
annot_val <- test_ls %>% group_by(treatment, event) %>% summarize(total = dplyr::n()) %>% dcast(formula = treatment ~ event, value.var = "total") %>% mutate(percent = 1-(`1`/(`0`+`1`))) %>% dplyr::select(percent) %>% unlist() %>% unname()
annot_val <- test_ls %>% group_by(treatment, event) %>% summarize(total = dplyr::n()) %>% reshape2::dcast(formula = treatment ~ event, value.var = "total") %>% mutate(percent = 1-(`1`/(`0`+`1`))) %>% dplyr::select(percent) %>% unlist() %>% unname()
annot_val
name_val <- c("b","a","bc","c")
plot_colors <- c("red","red","red","red")
plot_lines <- c("dotted","dotdash","solid","dashed")
annot_val <- test_ls %>% group_by(treatment, event) %>% summarize(total = dplyr::n()) %>% reshape2::dcast(formula = treatment ~ event, value.var = "total") %>% mutate(percent = 1-(`1`/(`0`+`1`))) %>% dplyr::select(percent) %>% unlist() %>% unname()
par(mai=c(1,1,.1,.1))
plot(survfit(S ~ treatment, test_ls),     xlim = c(10,41),     col=plot_colors,     lty=plot_lines,     lwd=5,    xlab= "time(d)",     ylab="fractional survival",     cex.lab=2.5,     cex.axis=2,      bty = "n")
for(i in 1:length(table(list(test_ls$treatment)))) {
legend(x = 36, y = annot_val[i], legend = name_val[i], text.col = plot_colors[i], bty = "n", xjust = 0, yjust = .5, cex=2.5)#
}
dev.off()
#par(mai=c(1,1,.1,.1))
plot(survfit(S ~ treatment, test_ls),     xlim = c(10,41),     col=plot_colors,     lty=plot_lines,     lwd=5,    xlab= "time(d)",     ylab="fractional survival",     cex.lab=2.5,     cex.axis=2,      bty = "n")
for(i in 1:length(table(list(test_ls$treatment)))) {
legend(x = 36, y = annot_val[i], legend = name_val[i], text.col = plot_colors[i], bty = "n", xjust = 0, yjust = .5, cex=2.5)#
}
dev.off()
#par(mai=c(1,1,.1,.1))
plot(survfit(S ~ treatment, test_ls),     xlim = c(10,41),     col=plot_colors,     lty=plot_lines,     lwd=5,    xlab= "time(d)",     ylab="fractional survival",     cex.lab=2.5,     cex.axis=2,      bty = "n")
for(i in 1:length(table(list(test_ls$treatment)))) {
legend(x = 36, y = annot_val[i], legend = name_val[i], text.col = plot_colors[i], bty = "n", xjust = 0, yjust = .5, cex=2.5)#
}
#par(mai=c(1,1,.1,.1))
plot(survfit(S ~ treatment, test_ls),     xlim = c(10,41),     col=plot_colors,     lty=plot_lines,     lwd=5,    xlab= "time(d)",     ylab="fractional survival",      bty = "n")
for(i in 1:length(table(list(test_ls$treatment)))) {
legend(x = 36, y = annot_val[i], legend = name_val[i], text.col = plot_colors[i], bty = "n", xjust = 0, yjust = .5, cex=1)#
}
#par(mai=c(1,1,.1,.1))
plot(survfit(S ~ treatment, test_ls),     xlim = c(10,41),     col=plot_colors,     lty=plot_lines,     lwd=2,    xlab= "time(d)",     ylab="fractional survival",      bty = "n")
for(i in 1:length(table(list(test_ls$treatment)))) {
legend(x = 36, y = annot_val[i], legend = name_val[i], text.col = plot_colors[i], bty = "n", xjust = 0, yjust = .5, cex=1)#
}
test_ls <- ls2 %>%
filter(treatment %in% c(p$vec$vec_ecmut)) %>%
mutate(exp = as.factor(as.character(start_day))) %>%
mutate(treatment = as.factor(as.character(treatment))) %>%
#  filter(treatment == "7636") %>%
droplevels()
test_ls <- lifespan_analysis %>%
filter(treatment %in% c(p$vec$vec_ecmut)) %>%
mutate(exp = as.factor(as.character(start_day))) %>%
mutate(treatment = as.factor(as.character(treatment))) %>%
#  filter(treatment == "7636") %>%
droplevels()
print("N per treatment")
data.frame(table(test_ls$treatment)) %>%
inner_join(lookup_code, by = c("Var1" = "code1")) %>%
dplyr::select(fullname,Freq)
levels(test_ls$treatment)
test_ls$treatment <- plyr::revalue(test_ls$treatment, c("7636"="WT","10862" = "metH"))
test_ls$S<-Surv(test_ls$time,test_ls$event)
## log rank test
print("Log rank test results")
survdiff(S ~ treatment, data = test_ls)
name_val <- c("a","a")
plot_colors <- c("green","green")
plot_lines <- c("dashed","solid")
annot_val <- test_ls %>% group_by(treatment, event) %>% summarize(total = dplyr::n()) %>% dcast(formula = treatment ~ event, value.var = "total") %>% mutate(percent = 1-(`1`/(`0`+`1`))) %>% dplyr::select(percent) %>% unlist() %>% unname()
annot_val <- test_ls %>% group_by(treatment, event) %>% summarize(total = dplyr::n()) %>% reshape2::dcast(formula = treatment ~ event, value.var = "total") %>% mutate(percent = 1-(`1`/(`0`+`1`))) %>% dplyr::select(percent) %>% unlist() %>% unname()
str(test_ls)
table(list(test_ls$treatment))
view <- test_ls %>% arrange(time)
plot(survfit(S ~ treatment, test_ls),     xlim = c(10,41),     col=plot_colors,     lty=plot_lines,     lwd=2,    xlab= "time(d)",     ylab="fractional survival",     bty = "n")
for(i in 1:length(table(list(test_ls$treatment)))) {
legend(x = 36, y = annot_val[i], legend = name_val[i], text.col = plot_colors[i], bty = "n", xjust = 0, yjust = .5, )#
}
jpeg(h=7.5, w = 7, "fig 4c - ec_lifespan.jpg", units = "in", res = 300)
dev.off()
library(learnr)
#knitr::opts_chunk$set(echo = FALSE)
#library(chron)
library(readxl)
#library(reshape2)
library(ggplot2)
library(cowplot)
library(dunn.test)
library(rcompanion)
#library(splitstackshape)
#library(coxme)
#library(survival)
library(multcomp)
library(dplyr)
library(survminer)
library(tidyr)
library(readr)
library(MAGNAMWAR)
g_legend <- function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
fecundity <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/fecundity_markdownout.csv")
lifespan <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/lifespan_markdownout.csv")
fitness <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/fitness_markdownout.csv")
lookup_code <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/lookup_code.csv")
lifespan_analysis <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/lifespananalysis_markdownout.csv")
fitness_formgwa <- readr::read.csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/fitnessvalues_markdownout.csv")
p <- list(vec = list(vec_bac = c("30p","28n","11c","Ax","Gno","4d","35u","15h","2b","75o","1a","3c","13g","70j","71k","16i"),
vec_atmut = c("SDR","PVEC","GDH","GNDH"),
vec_ecmut = c("7636","10862")
),
group = list("group_bac","group_atmut","group_ecmut"))
total_fitness1 <- fitness %>%
filter(!trt%in%c("Gno-17","1a-14","16i-16","16i-19","16i-12","16i-18","35u-18") & !date3 %in% c(35,36)) %>%
group_by(trt,vial) %>%
summarize(mean_fec = sum(fecundity)) %>%
filter(vial %in% p$vec$vec_bac)
p <- list(vec = list(vec_bac = c("28n","30p","11c","Gno","4d","35u","Ax","2b","13g","15h","75o","3c","1a","70j","71k","16i"),
vec_atmut = c("SDR","PVEC","GDH","GNDH"),
vec_ecmut = c("7636","10862")
),
group = list("group_bac","group_atmut","group_ecmut")
)
groups_file <- readr::read.csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/groupsWP_052819.txt")
groups_file <- readr::read_table(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/groupsWP_052819.txt")
groups_file
parsed_data <- FormatAfterOrtho("https://raw.githubusercontent.com/johnchaston/dros_fit/data/groupsWP_052819.txt", format="groups")
View(parsed_data)
pheno_data <- fitness_formgwa %>% filter(mod_death == 1) %>% filter(trt!="16i") %>% inner_join(lookup_code, by = c("trt"="code2")) %>% droplevels()
library(learnr)
#knitr::opts_chunk$set(echo = FALSE)
#library(chron)
library(readxl)
#library(reshape2)
library(ggplot2)
library(cowplot)
library(dunn.test)
library(rcompanion)
#library(splitstackshape)
#library(coxme)
#library(survival)
library(multcomp)
library(dplyr)
library(survminer)
library(tidyr)
library(readr)
library(MAGNAMWAR)
g_legend <- function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
fecundity <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/fecundity_markdownout.csv")
lifespan <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/lifespan_markdownout.csv")
fitness <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/fitness_markdownout.csv")
lookup_code <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/lookup_code.csv")
lifespan_analysis <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/lifespananalysis_markdownout.csv")
fitness_formgwa <- readr::read.csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/fitnessvalues_markdownout.csv")
#groups_file <- readr::read_table(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/groupsWP_052819.txt")
p <- list(vec = list(vec_bac = c("30p","28n","11c","Ax","Gno","4d","35u","15h","2b","75o","1a","3c","13g","70j","71k","16i"),
vec_atmut = c("SDR","PVEC","GDH","GNDH"),
vec_ecmut = c("7636","10862")
),
group = list("group_bac","group_atmut","group_ecmut"))
total_fitness1 <- fitness %>%
filter(!trt%in%c("Gno-17","1a-14","16i-16","16i-19","16i-12","16i-18","35u-18") & !date3 %in% c(35,36)) %>%
group_by(trt,vial) %>%
summarize(mean_fec = sum(fecundity)) %>%
filter(vial %in% p$vec$vec_bac)
p <- list(vec = list(vec_bac = c("28n","30p","11c","Gno","4d","35u","Ax","2b","13g","15h","75o","3c","1a","70j","71k","16i"),
vec_atmut = c("SDR","PVEC","GDH","GNDH"),
vec_ecmut = c("7636","10862")
),
group = list("group_bac","group_atmut","group_ecmut")
)
pheno_data <- fitness_formgwa %>% filter(mod_death == 1) %>% filter(trt!="16i") %>% inner_join(lookup_code, by = c("trt"="code2")) %>% droplevels()
fitness_formgwa <- readr::read.csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/fitnessvalues_markdownout.csv")
fitness_formgwa <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/fitnessvalues_markdownout.csv")
pheno_data <- fitness_formgwa %>% filter(mod_death == 1) %>% filter(trt!="16i") %>% inner_join(lookup_code, by = c("trt"="code2")) %>% droplevels()
## check headers
pheno_data[1,]
pheno_data <- fitness_formgwa %>% filter(mod_death == 1) %>% filter(trt!="16i") %>% inner_join(lookup_code, by = c("trt"="code2")) %>% droplevels() %>% select(-fullname, -code1, -code3)
## check headers
pheno_data[1,]
## check replicate numbers
table(list(pheno_data$new_filename))
lookup_code <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/lookup_code.csv")
pheno_data <- fitness_formgwa %>% filter(mod_death == 1) %>% filter(trt!="16i") %>% inner_join(lookup_code, by = c("trt"="code2")) %>% droplevels() %>% select(-fullname, -code1, -code3)
## check headers
pheno_data[1,]
## check replicate numbers
table(list(pheno_data$))
lookup_code <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/lookup_code.csv")
lookup_code
lookup_code <- readr::read_csv(file = "https://raw.githubusercontent.com/johnchaston/dros_fit/data/lookup_code.csv")
lookup_code
-
parsed_data <- FormatAfterOrtho("https://raw.githubusercontent.com/johnchaston/dros_fit/data/groupsWP_052819.txt", format="groups")
pheno_data <- fitness_formgwa %>% filter(mod_death == 1) %>% filter(trt!="16i") %>% inner_join(lookup_code, by = c("trt"="code2")) %>% droplevels() %>% select(-fullname, -code1, -code3)
## check headers
pheno_data[1,]
## check replicate numbers
table(list(pheno_data$new_filename))
table(list(pheno_data$trt))
shapiro.test(pheno_data$fitness)
# 						 species_name = 'new_filename',
# 						 resp = 'fitness',
# 						 princ_coord = 0.5)
# QQPlotter(mcl_matrix3)
# WriteMCL(mcl_matrix3,"wilcox_results_fitness_sep20.csv")
#
# joined_matrix <- JoinRepSeq(parsed_data, '~/Dropbox/Dietary Pref 2019/MGWA/precompliantfasta2/', mcl_matrix3, fastaformat = 'old')
# WriteMCL(joined_matrix,"wilcox_results_fitness_sep20_joined.csv")
#
#
mcl_matrix_lmer <- AnalyzeOrthoMCL(parsed_data,
pheno_data,
model = 'lmeR1',
species_name = 'new_filename',
resp = 'fitness',
rndm1 = "exp",
princ_coord = 0.5)
QQPlotter(mcl_matrix_lmer)
joined_matrix_lmer <- JoinRepSeq(parsed_data, '~/Dropbox/Dietary Pref 2019/MGWA/precompliantfasta2/', mcl_matrix_lmer, fastaformat = 'old')
WriteMCL(joined_matrix_lmer,"~/Dropbox/tradeoffs2/Oct2016-monoassociated_fecundity/redo2020/MGWA/wilcox_results_fitness_sep20_lmer_joined.csv")
usethis::use_tutorial("lesson1", "Drosophila fitness", open = interactive())
devtools::install()
learnr::run_tutorial("lesson1", "drosfitness")
learnr::run_tutorial("lesson1", "drosfitness")
